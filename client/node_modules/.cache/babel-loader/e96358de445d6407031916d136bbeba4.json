{"ast":null,"code":"import _toConsumableArray from \"/Users/sascha/Desktop/projects/instaverse/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sascha/Desktop/projects/instaverse/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sascha/Desktop/projects/instaverse/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sascha/Desktop/projects/instaverse/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sascha/Desktop/projects/instaverse/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sascha/Desktop/projects/instaverse/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sascha/Desktop/projects/instaverse/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sascha/Desktop/projects/instaverse/client/src/Map.jsx\";\nimport React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport axios from 'axios';\nvar Mapbox = ReactMapboxGl({\n  accessToken: 'pk.eyJ1Ijoic2FzY2hhbXoiLCJhIjoiY2pueWE3NGN0MGR0YjNwbzV3Zm5udjFkZiJ9.Yhe8XyJjVRuDsBHs9SsBMw'\n});\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      markers: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestWebcams();\n    }\n  }, {\n    key: \"requestWebcams\",\n    value: function requestWebcams(x, y) {\n      var _this2 = this;\n\n      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      axios.get(\"https://webcamstravel.p.mashape.com/webcams/list/limit=\".concat(limit, \"/country=SE&show=webcams:player,location\"), {\n        headers: {\n          'X-Mashape-Key': 'dEOco1PlZlmshIPqrt4ycn7xZE9zp1Mscwbjsnu53Bztt9kFJ2',\n          'X-Mashape-Host': 'webcamstravel.p.mashape.com'\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        var webcams = res.data.result.webcams;\n        console.log('Webcams: ', webcams);\n\n        _this2.setState(function (prevState) {\n          return _objectSpread({}, prevState, {\n            markers: _toConsumableArray(prevState.markers).concat(_toConsumableArray(webcams))\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      console.log(this.state.markers);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(_, evt) {\n      var _evt$lngLat = evt.lngLat,\n          lng = _evt$lngLat.lng,\n          lat = _evt$lngLat.lat;\n    }\n  }, {\n    key: \"renderMarker\",\n    value: function renderMarker(_ref) {\n      var longitude = _ref.longitude,\n          latitude = _ref.latitude,\n          player = _ref.player;\n      var src = player.live.embed || player.day.embed;\n      console.log(longitude, latitude);\n      return React.createElement(Feature, {\n        onClick: function onClick() {\n          return console.log('Rendering: ', src);\n        },\n        coordinates: [longitude, latitude],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var markers = this.state.markers;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Mapbox, {\n        style: \"mapbox://styles/mapbox/streets-v8\",\n        containerStyle: {\n          height: \"100vh\",\n          width: \"100vw\"\n        },\n        onClick: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"marker\",\n        layout: {\n          \"icon-image\": \"marker-15\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, markers.map(function (marker) {\n        return _this3.renderMarker(marker);\n      }))));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/sascha/Desktop/projects/instaverse/client/src/Map.jsx"],"names":["React","Component","ReactMapboxGl","Layer","Feature","axios","Mapbox","accessToken","Map","props","state","markers","requestWebcams","x","y","limit","offset","get","headers","then","res","console","log","data","webcams","result","setState","prevState","_","evt","lngLat","lng","lat","longitude","latitude","player","src","live","embed","day","height","width","handleClick","bind","map","marker","renderMarker"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport axios from 'axios';\n\nconst Mapbox = ReactMapboxGl({\n  accessToken: 'pk.eyJ1Ijoic2FzY2hhbXoiLCJhIjoiY2pueWE3NGN0MGR0YjNwbzV3Zm5udjFkZiJ9.Yhe8XyJjVRuDsBHs9SsBMw',\n});\n\nclass Map extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markers: []\n    };\n  }\n\n  componentDidMount() {\n    this.requestWebcams();\n  }\n\n  requestWebcams(x, y, limit = 50, offset = 0) {\n    axios.get(`https://webcamstravel.p.mashape.com/webcams/list/limit=${limit}/country=SE&show=webcams:player,location`, {\n      headers: {\n        'X-Mashape-Key': 'dEOco1PlZlmshIPqrt4ycn7xZE9zp1Mscwbjsnu53Bztt9kFJ2',\n        'X-Mashape-Host': 'webcamstravel.p.mashape.com',\n      }\n    }).then(res => {\n      console.log(res.data);\n      const { webcams } = res.data.result;\n      console.log('Webcams: ', webcams);\n      this.setState(prevState => ({...prevState, markers: [...prevState.markers, ...webcams]}));\n    }); \n  }\n  \n  componentWillUpdate() {\n    console.log(this.state.markers);\n  }\n\n  handleClick(_, evt) {\n    const { lng, lat } = evt.lngLat;\n  }\n\n  renderMarker({ longitude, latitude, player }) {\n    const src = player.live.embed || player.day.embed;\n    console.log(longitude, latitude)\n\n    return (\n      <Feature onClick={() => console.log('Rendering: ', src)} coordinates={[longitude, latitude]}/>\n    );\n  }\n\n  render() {\n    const { markers } = this.state;\n    \n    return (\n      <div>\n        <Mapbox\n          style='mapbox://styles/mapbox/streets-v8'\n          containerStyle={{\n            height: \"100vh\",\n            width: \"100vw\"\n          }}\n          onClick={this.handleClick.bind(this)}\n        >\n          <Layer\n            type=\"symbol\"\n            id=\"marker\"\n            layout={{ \"icon-image\": \"marker-15\" }}>\n            { markers.map(marker => this.renderMarker(marker)) }\n          </Layer>\n        </Mapbox>\n      </div>\n    );\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}